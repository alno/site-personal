<b>Мультиметоды</b> - это механизм выбора метода на основе не только динамического типа его получателя, как при использовании виртуальных методов, но и динамических типов его аргументов. По сути, этот механизм обобщает <b>виртуальные функции</b> и <b>перегрузку</b>.

При правильном использовании этот механизм позволяет писать более компактный и читабельный код, однако, как обычно и бывает, ценой потери производительности. Хотя вопрос о значительности этих потерь остается открытым, и, я думаю, схож с <a href="http://blog.alno.name/2008/06/virtual-functions-in-cpp-and-performance/">вопросом о производительности в случае с виртуальных функций</a>.

В <a href="http://blog.alno.name/2008/06/using-groovy/">Groovy</a> выбор метода для вызова осуществляется на основе динамических типов аргументов, а не статических, как, например, в <a href="http://blog.alno.name/cats/java/">Java</a>. В частности, рассмотрим два следующих участка кода.